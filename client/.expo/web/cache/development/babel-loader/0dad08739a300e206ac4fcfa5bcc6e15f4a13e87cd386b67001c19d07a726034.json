{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width,\n    scale = _useWindowDimensions.scale,\n    fontScale = _useWindowDimensions.fontScale;\n  return _jsxs(View, {\n    style: styles.appContainer,\n    children: [_jsx(View, {}), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Registrees\"\n      }), _jsx(Button, {\n        title: \"Add New Registree\"\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        style: styles.registreeContainer\n      }), _jsx(View, {\n        style: styles.registreeContainer\n      }), _jsx(View, {\n        style: styles.registreeContainer\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Button, {\n        title: \"Registrees\"\n      }), _jsx(Button, {\n        title: \"Share\"\n      }), _jsx(Button, {\n        title: \"Profile\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  appContainer: {\n    backgroundColor: 'linear-gradient(180deg, #414141 0%, rgba(65, 65, 65, 0) 100%)'\n  },\n  header: {\n    fontSize: '50px',\n    color: '#FFC700'\n  },\n  registreeContainer: {\n    height: '90px',\n    width: '351px',\n    border: '5px solid white',\n    backgroundColor: '#3AFF7D'\n  }\n});","map":{"version":3,"names":["StatusBar","Button","StyleSheet","Text","View","useWindowDimensions","jsx","_jsx","jsxs","_jsxs","App","_useWindowDimensions","height","width","scale","fontScale","style","styles","appContainer","children","header","title","registreeContainer","create","backgroundColor","fontSize","color","border"],"sources":["/home/sam/hub/Registree/client/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { Button, StyleSheet, Text, View, useWindowDimensions } from 'react-native';\n\nexport default function App() {\n  // Grab 'height', 'width', 'scale', and 'fontScale' using the 'useWindowDimensions' API\n  // so that we can scale the app's window size accordingly:\n  const { height, width, scale, fontScale } = useWindowDimensions();\n\n  return (\n    // Overall container for app:\n    <View style={styles.appContainer}>\n      {/* Top menu for desktop web use only: */}\n      <View>\n      </View>\n      {/* Top header section: */}\n      <View>\n        <Text style={styles.header}>Registrees</Text>\n        <Button \n          title=\"Add New Registree\"\n        />\n      </View>\n      {/* Bottom half section for remaining content: */}\n      <View>\n        <View style={styles.registreeContainer}>\n        </View>\n        <View style={styles.registreeContainer}>\n        </View>\n        <View style={styles.registreeContainer}>\n        </View>\n      </View>\n      {/* Buttons footer for mobile and iPad: */}\n      <View>\n        <Button \n          title=\"Registrees\"\n        />\n        <Button \n          title=\"Share\"\n        />\n        <Button \n          title=\"Profile\"\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    backgroundColor: 'linear-gradient(180deg, #414141 0%, rgba(65, 65, 65, 0) 100%)'\n  },\n  header: {\n    fontSize: '50px',\n    color: '#FFC700'\n  },\n  registreeContainer: {\n    height: '90px',\n    width: '351px',\n    border: '5px solid white',\n    backgroundColor: '#3AFF7D'\n  }\n})\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,mBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG5C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAG5B,IAAAC,oBAAA,GAA4CN,mBAAmB,CAAC,CAAC;IAAzDO,MAAM,GAAAD,oBAAA,CAANC,MAAM;IAAEC,KAAK,GAAAF,oBAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,oBAAA,CAALG,KAAK;IAAEC,SAAS,GAAAJ,oBAAA,CAATI,SAAS;EAEvC,OAEEN,KAAA,CAACL,IAAI;IAACY,KAAK,EAAEC,MAAM,CAACC,YAAa;IAAAC,QAAA,GAE/BZ,IAAA,CAACH,IAAI,IACC,CAAC,EAEPK,KAAA,CAACL,IAAI;MAAAe,QAAA,GACHZ,IAAA,CAACJ,IAAI;QAACa,KAAK,EAAEC,MAAM,CAACG,MAAO;QAAAD,QAAA,EAAC;MAAU,CAAM,CAAC,EAC7CZ,IAAA,CAACN,MAAM;QACLoB,KAAK,EAAC;MAAmB,CAC1B,CAAC;IAAA,CACE,CAAC,EAEPZ,KAAA,CAACL,IAAI;MAAAe,QAAA,GACHZ,IAAA,CAACH,IAAI;QAACY,KAAK,EAAEC,MAAM,CAACK;MAAmB,CACjC,CAAC,EACPf,IAAA,CAACH,IAAI;QAACY,KAAK,EAAEC,MAAM,CAACK;MAAmB,CACjC,CAAC,EACPf,IAAA,CAACH,IAAI;QAACY,KAAK,EAAEC,MAAM,CAACK;MAAmB,CACjC,CAAC;IAAA,CACH,CAAC,EAEPb,KAAA,CAACL,IAAI;MAAAe,QAAA,GACHZ,IAAA,CAACN,MAAM;QACLoB,KAAK,EAAC;MAAY,CACnB,CAAC,EACFd,IAAA,CAACN,MAAM;QACLoB,KAAK,EAAC;MAAO,CACd,CAAC,EACFd,IAAA,CAACN,MAAM;QACLoB,KAAK,EAAC;MAAS,CAChB,CAAC;IAAA,CACE,CAAC;EAAA,CACH,CAAC;AAEX;AAEA,IAAMJ,MAAM,GAAGf,UAAU,CAACqB,MAAM,CAAC;EAC/BL,YAAY,EAAE;IACZM,eAAe,EAAE;EACnB,CAAC;EACDJ,MAAM,EAAE;IACNK,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE;EACT,CAAC;EACDJ,kBAAkB,EAAE;IAClBV,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,OAAO;IACdc,MAAM,EAAE,iBAAiB;IACzBH,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}