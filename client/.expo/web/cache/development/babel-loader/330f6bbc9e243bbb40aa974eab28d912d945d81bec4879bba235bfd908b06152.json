{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Button } from '@rneui/themed';\nimport Stack from '@rneui/themed';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useWindowDimensions = useWindowDimensions(),\n    height = _useWindowDimensions.height,\n    width = _useWindowDimensions.width,\n    scale = _useWindowDimensions.scale,\n    fontScale = _useWindowDimensions.fontScale;\n  return _jsx(LinearGradient, {\n    colors: [\"#343534\", \"#1f704e\", \"#0ea666\"],\n    style: styles.greenBackgroundGradient,\n    children: _jsxs(View, {\n      style: styles.appContainer,\n      children: [_jsx(View, {}), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.header,\n          children: \"Registrees\"\n        }), _jsx(Button, {\n          title: \"Add New Registree\",\n          style: styles.newRegistreeButton\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(View, {\n          style: styles.registreeContainer\n        }), _jsx(View, {\n          style: styles.registreeContainer\n        }), _jsx(View, {\n          style: styles.registreeContainer\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Button, {\n          title: \"Registrees\",\n          type: \"outline\"\n        }), _jsx(Button, {\n          title: \"Share\"\n        }), _jsx(Button, {\n          title: \"Profile\"\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  appContainer: {},\n  newRegistreeButton: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#000000\",\n    borderColor: \"#000000\",\n    borderRadius: \"5px\"\n  },\n  darkGreenGradient: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5\n  },\n  header: {\n    fontSize: '50px',\n    color: '#FFC700'\n  },\n  registreeContainer: {\n    height: '90px',\n    width: '351px',\n    border: '5px solid white',\n    backgroundColor: '#3AFF7D'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","useWindowDimensions","LinearGradient","Button","Stack","jsx","_jsx","jsxs","_jsxs","App","_useWindowDimensions","height","width","scale","fontScale","colors","style","styles","greenBackgroundGradient","children","appContainer","header","title","newRegistreeButton","registreeContainer","type","create","color","backgroundColor","borderColor","borderRadius","darkGreenGradient","flex","paddingLeft","paddingRight","fontSize","border"],"sources":["/home/sam/hub/Registree/client/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, useWindowDimensions } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Button } from '@rneui/themed';\nimport Stack from '@rneui/themed';\n\nexport default function App() {\n  // Grab 'height', 'width', 'scale', and 'fontScale' using the 'useWindowDimensions' API\n  // so that we can scale the app's window size accordingly:\n  const { height, width, scale, fontScale } = useWindowDimensions();\n\n  return (\n    // Overall container for app:\n    <LinearGradient colors={[\"#343534\", \"#1f704e\", \"#0ea666\"]} style={styles.greenBackgroundGradient}>\n      <View style={styles.appContainer}>\n        {/* Top menu for desktop web use only: */}\n        <View>\n        </View>\n        {/* Top header section: */}\n        <View>\n          <Text style={styles.header}>Registrees</Text>\n          <Button \n            title=\"Add New Registree\"\n            style={styles.newRegistreeButton}\n          />\n        </View>\n        {/* Bottom half section for remaining content: */}\n        <View>\n          <View style={styles.registreeContainer}>\n          </View>\n          <View style={styles.registreeContainer}>\n          </View>\n          <View style={styles.registreeContainer}>\n          </View>\n        </View>\n        {/* Buttons footer for mobile and iPad: */}\n        <View>\n          <Button \n            title=\"Registrees\"\n            type=\"outline\"\n          />\n          <Button \n            title=\"Share\"\n          />\n          <Button \n            title=\"Profile\"\n          />\n        </View>\n      </View>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  appContainer: {\n  },\n  newRegistreeButton: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#000000\",\n    borderColor: \"#000000\",\n    borderRadius: \"5px\"\n  },\n  darkGreenGradient: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderRadius: 5\n  },\n  header: {\n    fontSize: '50px',\n    color: '#FFC700'\n  },\n  registreeContainer: {\n    height: '90px',\n    width: '351px',\n    border: '5px solid white',\n    backgroundColor: '#3AFF7D'\n  }\n})\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: '#fff',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n// });\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,mBAAA;AAE5C,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAG5B,IAAAC,oBAAA,GAA4CT,mBAAmB,CAAC,CAAC;IAAzDU,MAAM,GAAAD,oBAAA,CAANC,MAAM;IAAEC,KAAK,GAAAF,oBAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,oBAAA,CAALG,KAAK;IAAEC,SAAS,GAAAJ,oBAAA,CAATI,SAAS;EAEvC,OAEER,IAAA,CAACJ,cAAc;IAACa,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;IAACC,KAAK,EAAEC,MAAM,CAACC,uBAAwB;IAAAC,QAAA,EAC/FX,KAAA,CAACR,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACG,YAAa;MAAAD,QAAA,GAE/Bb,IAAA,CAACN,IAAI,IACC,CAAC,EAEPQ,KAAA,CAACR,IAAI;QAAAmB,QAAA,GACHb,IAAA,CAACP,IAAI;UAACiB,KAAK,EAAEC,MAAM,CAACI,MAAO;UAAAF,QAAA,EAAC;QAAU,CAAM,CAAC,EAC7Cb,IAAA,CAACH,MAAM;UACLmB,KAAK,EAAC,mBAAmB;UACzBN,KAAK,EAAEC,MAAM,CAACM;QAAmB,CAClC,CAAC;MAAA,CACE,CAAC,EAEPf,KAAA,CAACR,IAAI;QAAAmB,QAAA,GACHb,IAAA,CAACN,IAAI;UAACgB,KAAK,EAAEC,MAAM,CAACO;QAAmB,CACjC,CAAC,EACPlB,IAAA,CAACN,IAAI;UAACgB,KAAK,EAAEC,MAAM,CAACO;QAAmB,CACjC,CAAC,EACPlB,IAAA,CAACN,IAAI;UAACgB,KAAK,EAAEC,MAAM,CAACO;QAAmB,CACjC,CAAC;MAAA,CACH,CAAC,EAEPhB,KAAA,CAACR,IAAI;QAAAmB,QAAA,GACHb,IAAA,CAACH,MAAM;UACLmB,KAAK,EAAC,YAAY;UAClBG,IAAI,EAAC;QAAS,CACf,CAAC,EACFnB,IAAA,CAACH,MAAM;UACLmB,KAAK,EAAC;QAAO,CACd,CAAC,EACFhB,IAAA,CAACH,MAAM;UACLmB,KAAK,EAAC;QAAS,CAChB,CAAC;MAAA,CACE,CAAC;IAAA,CACH;EAAC,CACO,CAAC;AAErB;AAEA,IAAML,MAAM,GAAGnB,UAAU,CAAC4B,MAAM,CAAC;EAC/BN,YAAY,EAAE,CACd,CAAC;EACDG,kBAAkB,EAAE;IAClBI,KAAK,EAAE,SAAS;IAChBC,eAAe,EAAE,SAAS;IAC1BC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE;EAChB,CAAC;EACDC,iBAAiB,EAAE;IACjBC,IAAI,EAAE,CAAC;IACPC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBJ,YAAY,EAAE;EAChB,CAAC;EACDT,MAAM,EAAE;IACNc,QAAQ,EAAE,MAAM;IAChBR,KAAK,EAAE;EACT,CAAC;EACDH,kBAAkB,EAAE;IAClBb,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,OAAO;IACdwB,MAAM,EAAE,iBAAiB;IACzBR,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}